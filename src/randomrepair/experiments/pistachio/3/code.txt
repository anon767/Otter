/*
	Code is from LSH 0.2.1. After the server sends a list of channel options before starting a shell for that channel, the server should acknowledge by sending back the number of parameters received and the list of the parameters that will be enforced. Our rule simply asks that the number of parameters received be the same as the number of parameters acknowledged.

	Notes: I've simplified the code somewhat to get read of the packing/unpacking of messages, most of those functions were black boxes anyway. Also, params[] is a vector of char*, uparams is a vector of unsigned longs.

	Difficulty: High?
	Solution: remove the semi-colon at the end of the for.
*/

if(msgin.type == SSH_MSG_CHANNEL_OPTIONS) {
	for(i = 0; i< msgin.szParams; i++);
	{
		msgout.uparams[0]++;
		/* Removed code for confirming supported params
		if(supported(msgin.params[i]) strncpy(msgout.params[msgout.szParams++], msgin.params[i], MAX_PARAM_SIZE);
		*/
	}
	msgout.type = SSH_CHANNEL_OPTIONS_ACK;
	msgout.szuParams = 2;
	msgout.uparams[1] = ~msgout.uparams[0];
	fmsgsend(clisock, msgout, SSH2_MSG_SIZE);		
}