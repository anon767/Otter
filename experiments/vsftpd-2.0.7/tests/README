This is not perfectly laid out, and things require a bit of tinkering
to change from one type of run to the next. Here's how it works:

The *.c files shouldn't have to be changed. These are the actual tests.

The *.test files just call './test_script' with their own name as an
argument. They shouldn't have to be changed, either.

symbolic_values contains the ifdefs to allow configuration options to
be symbolic or concrete based on preprocessor variables. Each *.c file
#includes this file.

test_script is the script that actually gets invoked by Skoll. It, in
turn, invokes some other scripts, and it has to be changed
appropriately, depending on what you want to run.

The scripts that test_script invokes, run symbolic or concrete tests
in the full or restricted configuration space, are:

concreteTest
concreteTest_restricted
symbTest
symbTest_restricted

The latter two leave the marshalled data files in the directory
/fs/skoll/symexe/data/vsftpd-2.0.7/marshalledData/ ,
as <testname>.data and <testname>_restricted.data, respectively.

In addition to these four scripts, there is one, guarCov, that computes
guaranteed coverage. Like the others, if you want to run this, you
should invoke it through test_script if you want Skoll to run it. For
now, you have to specify within the script itself where the marshalled
data is. Currently, the script reads
MARSHALLED_FILE=$DIR/data/marshalledData/${1}.data
where ${1} will be the test name. Given how symbTest_restricted names
its outputs, this should be changed to
MARSHALLED_FILE=$DIR/data/marshalledData/${1}_restricted.data
in order to compute guaranteed coverage for that data.

Invoking
trunk/experiments/vsftpd-2.0.7/skoll_scheduler/schedulingCommands
schedules all the tests in Skoll. Individual tests can be scheduled by
picking out the corresponding lines from that script.
